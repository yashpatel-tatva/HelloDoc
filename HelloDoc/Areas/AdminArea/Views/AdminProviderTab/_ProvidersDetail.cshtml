@{
    Layout = null;
}
@using DataModels.AdminSideViewModels;
@model List<ProviderMenuViewModel> ;
<table class="w-100">
    <tbody>
        <tr id="saveButton" style="border-top : 10px solid transparent ; border-bottom : 10px solid transparent ; display : none" class="justify-content-center">
            <td class="d-flex justify-content-center">
                <button class="p-1 text-white bg-info rounded border-info d-flex align-items-center">
                    <span class="">Save</span>
                </button>
            </td>
        </tr>
        @foreach (var physician in Model)
        {
            <tr class="p-1" style="border-top : 10px solid transparent ; border-bottom : 10px solid transparent">
                <td style="width : 12%; text-align : center!important">
                    <input type="checkbox" class="form-check-input" name="StopNotificationCheckbox" id="sn_@physician.PhysicanId" value="@physician.PhysicanId"
                    @if (physician.StopNotification)
                    {
                        @: checked
                    }>
                </td>
                <td style="width : 24%">@physician.Name</td>
                <td style="width : 17%">@physician.Role</td>
                <td style="width : 21%">@physician.OnCallStatus</td>
                <td style="width : 14%">@physician.Status</td>
                <td style="width : 13% ; text-align : center!important">
                    <div class="d-flex justify-content-start">
                        <button type="button" class="bg-transparent ContactPopUp border-0 justify-content-start d-flex" value="@physician.PhysicanId">
                            <div class="babtn  rounded align-item-center p-1 px-2">
                                <div>Contact</div>
                            </div>
                        </button>
                        <button type="button" class="bg-transparent border-0 EditProviderPage justify-content-start d-flex" value="@physician.PhysicanId">
                            <div class="babtn rounded align-item-center p-1 px-2">
                                <div>Edit</div>
                            </div>
                        </button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    $(document).ready(function () {
        var checkedToUnchecked = [];
        var uncheckedToChecked = [];
        $('#saveButton').hide();
        var initialState = {};
        $('input[name="StopNotificationCheckbox"]').each(function () {
            initialState[this.id] = this.checked;
        });
        $('input[name="StopNotificationCheckbox"]').change(function () {
            var isSame = true;
            checkedToUnchecked = [];
            uncheckedToChecked = [];
            $('input[name="StopNotificationCheckbox"]').each(function () {
                if (this.checked !== initialState[this.id]) {
                    isSame = false;
                    if (this.checked) {
                        uncheckedToChecked.push(this.id);
                    } else {
                        checkedToUnchecked.push(this.id);
                    }
                    $(this).css("border-color", "red");
                }
                else {
                    $(this).css("border-color", "#0dcaf0");
                }
            });
            if (isSame) {
                $('#saveButton').css("display" , "flex");
                $('#saveButton').hide();
            } else {
                $('#saveButton').css("display", "none");
                $('#saveButton').show();
            }
        });
        $('#saveButton').on('click', function () {
            var checkedToUncheckedlist = [];
            var uncheckedToCheckedlist = [];
            checkedToUnchecked.forEach((element, index) => {
                checkedToUncheckedlist.push($('#' + element).val());
            });
            uncheckedToChecked.forEach((element, index) => {
                uncheckedToCheckedlist.push($('#' + element).val());
            });
            console.log("Unchecked to checked: ", uncheckedToCheckedlist);
            console.log("Checked to unchecked: ", checkedToUncheckedlist);

            $.ajax({
                url: '/AdminArea/AdminProviderTab/ChangeNotification',
                type: 'POST',
                data: { checkedToUnchecked: checkedToUncheckedlist, uncheckedToChecked: uncheckedToCheckedlist },
                success: function (result) {
                    $('#saveButton').hide();
                    $('input[name="StopNotificationCheckbox"]').css("border-color", "#0dcaf0");
                    Swal.fire({
                        position: "top-end",
                        icon: "success",
                        title: "Changes Saved",
                        showConfirmButton: false,
                        timer: 1000
                    });
                }
            });
        });
    });

    $('.ContactPopUp').on('click', function () {
        var physicianid = $(this).val();
        console.log(physicianid);
        $.ajax({
            url: '/AdminArea/AdminProviderTab/ContactProviderPopUp',
            type: 'POST',
            data: { physicianid: physicianid },
            success: function (result) {
                $('#_ContactProvider').html(result);
                var my = new bootstrap.Modal(document.getElementById('ModalToOpen'));
                my.show();
            }
        });
    });
    $('.EditProviderPage').on('click', function () {
        var physicianid = $(this).val();
        console.log(physicianid);
        $.ajax({
            url: '/AdminArea/AdminProviderTab/EditProviderPage',
            type: 'POST',
            data: { physicianid: physicianid },
            success: function (result) {
                $('#nav-tabContent').html(result);
            }
        });
    });

</script>



